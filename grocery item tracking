<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>PlanWise ‚Äî Home Essentials & Food (All-in-One)</title>

  <!-- Bootstrap & Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

  <style>
    :root{
      --accent-1:#42a5f5;
      --accent-2:#26c6da;
      --card-bg: #ffffffd9;
    }
    body{
      font-family: "Segoe UI", Roboto, Arial, sans-serif;
      background: linear-gradient(135deg,#f7fbff 0%, #eef8f5 100%);
      color:#223;
      padding-bottom:60px;
    }

    /* top bar */
    .topbar{
      background: linear-gradient(90deg,var(--accent-1),var(--accent-2));
      color:white;
      padding:12px 20px;
      border-radius:12px;
      box-shadow: 0 8px 20px rgba(37,109,163,0.12);
      margin:18px;
      display:flex;
      align-items:center;
      justify-content:space-between;
      gap:12px;
    }
    .brand {font-weight:700; font-size:1.05rem; display:flex; align-items:center; gap:10px;}
    .brand i {font-size:1.25rem;}
    .top-actions {display:flex; gap:8px; align-items:center;}
    .backBtn {background:#ff9800; color:white; border-radius:20px; padding:6px 12px; border:none;}

    /* cards */
    .category-card{
      background: linear-gradient(180deg,#fffdf8,#fff6ee);
      border:1px solid #ffdcb8;
      border-radius:14px;
      padding:22px;
      text-align:center;
      cursor:pointer;
      transition: transform .22s, box-shadow .22s;
      min-height:120px;
      display:flex;
      flex-direction:column;
      justify-content:center;
    }
    .category-card:hover{ transform:translateY(-6px); box-shadow:0 12px 30px rgba(0,0,0,0.08); }
    .category-title{ font-weight:700; color:#ff7f50; margin-bottom:8px; }
    .category-desc{ color:#556; font-size:.95rem; }

    /* form card & table */
    .panel-card{ background:var(--card-bg); border-radius:12px; padding:18px; box-shadow:0 8px 24px rgba(16,60,100,0.06); }
    .section-title{ font-weight:700; color:var(--accent-1); }

    table.table thead th { background: #0aa3c3; color:white; border:none; }
    .badge-expiry{ padding:6px 10px; border-radius:12px; font-weight:600;}
    .expired{ background:#d32f2f; color:#fff;}
    .near{ background:#ff5252; color:#fff;}
    .soon{ background:#ff9800; color:#fff;}
    .ok{ background:#4caf50; color:#fff;}

    /* responsive */
    @media (max-width:720px){
      .topbar{ flex-direction:column; align-items:flex-start; gap:10px;}
    }
  </style>
</head>
<body>

  <!-- TOP BAR -->
  <div class="topbar container-fluid">
    <div class="brand">
      <i class="bi bi-box-seam"></i>
      <span>PlanWise</span>
      <small class="text-white-50" style="font-weight:600;">¬∑ Essentials & Food</small>
    </div>

    <div class="top-actions">
      <button id="openDashboard" class="btn btn-light btn-sm"><i class="bi bi-speedometer2"></i> Dashboard</button>
      <button id="openChooser" class="btn btn-light btn-sm"><i class="bi bi-grid-3x3"></i> Choose Category</button>
    </div>
  </div>

  <!-- MAIN LAYOUT -->
  <main class="container mt-4">

    <!-- 1) CATEGORY CHOOSER MODAL (LAUNCHES ON START OR VIA BUTTON) -->
    <div class="modal fade" id="chooserModal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4">
          <div class="modal-header bg-info text-white">
            <h5 class="modal-title"><i class="bi bi-columns-gap"></i> Choose Area</h5>
            <button class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <p class="mb-3">Pick what you want to manage:</p>
            <div class="d-flex gap-2">
              <button class="btn btn-outline-primary w-50" onclick="showCategoryLanding('home')">üè† Home Essentials</button>
              <button class="btn btn-outline-success w-50" onclick="showCategoryLanding('food')">üç¥ Food</button>
            </div>
            <hr />
            <p class="small text-muted mb-0">You can also access the Dashboard from the top bar for a quick summary.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- 2) DASHBOARD (SUMMARY) -->
    <section id="dashboardView" class="panel-card mb-4 d-none">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="section-title"><i class="bi bi-bar-chart-line"></i> Summary Dashboard</h4>
        <div>
          <button class="btn btn-sm btn-outline-secondary" onclick="closeDashboard()">Close</button>
        </div>
      </div>

      <div class="row gy-3">
        <div class="col-md-4">
          <div class="p-3 rounded-3" style="background:#fff;">
            <div class="d-flex justify-content-between">
              <div><small class="text-muted">Total Home Items</small><h5 id="totalHome">0</h5></div>
              <div><i class="bi bi-house-door" style="font-size:1.6rem;color:var(--accent-1);"></i></div>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="p-3 rounded-3" style="background:#fff;">
            <div class="d-flex justify-content-between">
              <div><small class="text-muted">Total Food Items</small><h5 id="totalFood">0</h5></div>
              <div><i class="bi bi-egg-fried" style="font-size:1.6rem;color:#f57c00;"></i></div>
            </div>
          </div>
        </div>

        <div class="col-md-4">
          <div class="p-3 rounded-3" style="background:#fff;">
            <div class="d-flex justify-content-between">
              <div><small class="text-muted">Expiring Soon (7d)</small><h5 id="expiringSoon">0</h5></div>
              <div><i class="bi bi-exclamation-triangle" style="font-size:1.6rem;color:#ff7043;"></i></div>
            </div>
          </div>
        </div>
      </div>

      <hr />

      <div>
        <h6 class="mb-2">Expiring Items (next 7 days)</h6>
        <div id="expiringList" style="max-height:220px; overflow:auto;"></div>
      </div>
    </section>

    <!-- 3) HOME ESSENTIALS LANDING (5 category cards) -->
    <section id="homeLanding" class="d-none mb-4">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="section-title">üè† Home Essentials</h3>
        <div>
          <button class="btn backBtn" onclick="showChooser()">‚¨Ö Back</button>
        </div>
      </div>

      <div class="row g-4">
        <div class="col-md-4">
          <div class="category-card" onclick="openHomeCategory('Cleaning Supplies')">
            <div class="category-title">Cleaning Supplies</div>
            <div class="category-desc">Detergents, disinfectants, and cleaning tools.</div>
          </div>
        </div>

        <div class="col-md-4">
          <div class="category-card" onclick="openHomeCategory('Laundry')">
            <div class="category-title">Laundry</div>
            <div class="category-desc">Laundry detergent, softeners & stain removers.</div>
          </div>
        </div>

        <div class="col-md-4">
          <div class="category-card" onclick="openHomeCategory('Paper Products')">
            <div class="category-title">Paper Products</div>
            <div class="category-desc">Tissues, toilet paper, napkins & paper towels.</div>
          </div>
        </div>

        <div class="col-md-4">
          <div class="category-card" onclick="openHomeCategory('Kitchen Essentials')">
            <div class="category-title">Kitchen Essentials</div>
            <div class="category-desc">Utensils, foil, wraps, sponges & dish soap.</div>
          </div>
        </div>

        <div class="col-md-4">
          <div class="category-card" onclick="openHomeCategory('Personal Care')">
            <div class="category-title">Personal Care</div>
            <div class="category-desc">Soap, shampoo, toothpaste & daily essentials.</div>
          </div>
        </div>
      </div>
    </section>

    <!-- 4) FOOD LANDING -->
    <section id="foodLanding" class="d-none mb-4">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="section-title">üç¥ Food Categories</h3>
        <div><button class="btn backBtn" onclick="showChooser()">‚¨Ö Back</button></div>
      </div>

      <div class="row g-4">
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Produce')"><div class="category-title">Fruits & vegetables</div><div class="category-desc">Fruits & vegetables.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Meat & Seafood')"><div class="category-title">Meat & Seafood</div><div class="category-desc">Fresh meat & fish.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Deli')"><div class="category-title">Istant</div><div class="category-desc">Ready-to-eatfoods.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Bakery')"><div class="category-title">Bakery</div><div class="category-desc">Bread, pastries & cakes.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Dairy & Refrigerated')"><div class="category-title">Dairy</div><div class="category-desc">Milk, cheese, yogurt & more.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Pantry Staples')"><div class="category-title">Pantry Staples</div><div class="category-desc">Rice, pasta, oils & grains.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Canned & Jarred')"><div class="category-title">Canned & Jarred</div><div class="category-desc">Cans, sauces ,Jams.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Snacks & Sweets')"><div class="category-title">Snacks & Sweets</div><div class="category-desc">Chips, nuts & chocolates.</div></div></div>
        <div class="col-md-4"><div class="category-card" onclick="openFoodCategory('Frozen Foods')"><div class="category-title">Frozen Foods</div><div class="category-desc">Frozen meals & desserts.</div></div></div>
      </div>
    </section>

    <!-- 5) HOME DETAIL (form + table) -->
    <section id="homeDetail" class="d-none">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="section-title" id="homeDetailTitle">üè† Home - Category</h4>
        <div>
          <button class="btn btn-outline-secondary me-2" onclick="backToHomeLanding()">‚¨Ö Back</button>
          <button class="btn btn-outline-info" onclick="showDashboard()">View Dashboard</button>
        </div>
      </div>

      <div class="panel-card mb-3">
        <form id="homeForm" class="row g-3">
          <div class="col-md-3">
            <label class="form-label">Category</label>
            <input type="text" id="homeCategoryField" class="form-control" readonly />
          </div>
          <div class="col-md-3">
            <label class="form-label">Product Name</label>
            <input type="text" id="homeProductName" class="form-control" required />
          </div>
          <div class="col-md-2">
            <label class="form-label">Quantity</label>
            <input type="text" id="homeQuantity" class="form-control" required />
          </div>
          <div class="col-md-2">
            <label class="form-label">Money (‚Çπ)</label>
            <input type="number" id="homeMoney" class="form-control" required />
          </div>
          <div class="col-md-2">
            <label class="form-label">Bought Date</label>
            <input type="date" id="homeBoughtDate" class="form-control" required />
          </div>

          <div class="col-md-3">
            <label class="form-label">Expiry Date (auto)</label>
            <input type="date" id="homeExpiryDate" class="form-control" readonly />
          </div>

          <div class="col-md-9 d-flex align-items-end justify-content-end">
            <button class="btn btn-success" type="submit"><i class="bi bi-plus-lg"></i> Add Home Item</button>
          </div>
        </form>
      </div>

      <div class="panel-card">
        <h6 class="mb-3">Home Items ‚Äî <small class="text-muted" id="homeListSubtitle"></small></h6>
        <div style="overflow:auto">
          <table class="table table-hover">
            <thead><tr><th>Category</th><th>Product</th><th>Qty</th><th>Money</th><th>Bought</th><th>Expiry</th><th>Action</th></tr></thead>
            <tbody id="homeTable"></tbody>
          </table>
        </div>
      </div>
    </section>

    <!-- 6) FOOD DETAIL (form + table) -->
    <section id="foodDetailSection" class="d-none">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="section-title" id="foodDetailTitle">üç¥ Food - Category</h4>
        <div>
          <button class="btn btn-outline-secondary me-2" onclick="backToFoodLanding()">‚¨Ö Back</button>
          <button class="btn btn-outline-info" onclick="showDashboard()">View Dashboard</button>
        </div>
      </div>

      <div class="panel-card mb-3">
        <form id="foodItemForm" class="row g-3">
          <div class="col-md-3">
            <label class="form-label">Category</label>
            <input type="text" id="foodCategoryField" class="form-control" readonly />
          </div>
          <div class="col-md-3">
            <label class="form-label">Product Name</label>
            <input type="text" id="foodProductName" class="form-control" required />
          </div>
          <div class="col-md-2">
            <label class="form-label">Quantity</label>
            <input type="text" id="foodQuantity" class="form-control" required />
          </div>
          <div class="col-md-2">
            <label class="form-label">Money (‚Çπ)</label>
            <input type="number" id="foodMoney" class="form-control" required />
          </div>
          <div class="col-md-2">
            <label class="form-label">Bought Date</label>
            <input type="date" id="foodBoughtDate" class="form-control" required />
          </div>

          <div class="col-md-3">
            <label class="form-label">Expiry Date (auto)</label>
            <input type="date" id="foodExpiryDate" class="form-control" readonly />
          </div>

          <div class="col-md-9 d-flex align-items-end justify-content-end">
            <button class="btn btn-success" type="submit"><i class="bi bi-plus-lg"></i> Add Food Item</button>
          </div>
        </form>
      </div>

      <div class="panel-card">
        <h6 class="mb-3">Food Items ‚Äî <small class="text-muted" id="foodListSubtitle"></small></h6>
        <div style="overflow:auto">
          <table class="table table-hover">
            <thead><tr><th>Category</th><th>Product</th><th>Qty</th><th>Money</th><th>Bought</th><th>Expiry</th><th>Action</th></tr></thead>
            <tbody id="foodItemsTable"></tbody>
          </table>
        </div>
      </div>
    </section>

  </main>

  <!-- BOOTSTRAP JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    /* ============================
       Data structures & rules
       ============================ */
    const homeExpiryRules = {
      "Cleaning Supplies": 30,
      "Laundry": 60,
      "Paper Products": 120,
      "Kitchen Essentials": 45,
      "Personal Care": 90
    };

    const foodExpiryRules = {
      "Produce": 7,
      "Meat & Seafood": 5,
      "Deli": 5,
      "Bakery": 4,
      "Dairy & Refrigerated": 2,
      "Pantry Staples": 180,
      "Canned & Jarred": 365,
      "Snacks & Sweets": 60,
      "Frozen Foods": 30
    };

    // storage keys
    const HOME_KEY = 'planwise_home_items_v1';
    const FOOD_KEY = 'planwise_food_items_v1';

    // caches
    let homeItems = JSON.parse(localStorage.getItem(HOME_KEY) || '[]');
    let foodItems = JSON.parse(localStorage.getItem(FOOD_KEY) || '[]');

    /* ============================
       Helpers
       ============================ */
    const $$ = id => document.getElementById(id);
    function formatDate(d){ if(!d) return ''; let dt = new Date(d); return dt.toLocaleDateString(); }
    function isoDate(d){ if(!d) return ''; return new Date(d).toISOString().split('T')[0]; }
    function daysBetween(d1,d2){
      return Math.ceil((new Date(d1) - new Date(d2)) / (1000*60*60*24));
    }
    function expiryBadge(expiryIso){
      const today = new Date(); const exp = new Date(expiryIso);
      const daysLeft = Math.ceil((exp - today) / (1000*60*60*24));
      if(daysLeft < 0) return `<span class="badge-expiry expired">‚õî Expired ${Math.abs(daysLeft)}d</span>`;
      if(daysLeft <= 3) return `<span class="badge-expiry near">‚ö† ${daysLeft}d</span>`;
      if(daysLeft <= 7) return `<span class="badge-expiry soon">‚åõ ${daysLeft}d</span>`;
      return `<span class="badge-expiry ok">‚úÖ ${daysLeft}d</span>`;
    }

    /* ============================
       UI controls to show/hide sections
       ============================ */
    const sections = {
      chooser: () => new bootstrap.Modal($$('chooserModal')),
      dashboard: $$('dashboardView'),
      homeLanding: $$('homeLanding'),
      foodLanding: $$('foodLanding'),
      homeDetail: $$('homeDetail'),
      foodDetail: $$('foodDetailSection')
    };

    function hideAllSections(){
      sections.dashboard.classList.add('d-none');
      sections.homeLanding.classList.add('d-none');
      sections.foodLanding.classList.add('d-none');
      sections.homeDetail.classList.add('d-none');
      sections.foodDetail.classList.add('d-none');
    }

    // show chooser modal (startup or back)
    const chooserModal = sections.chooser();
    function showChooser(){
      hideAllSections();
      chooserModal.show();
    }

    // show main dashboard panel
    function showDashboard(){
      hideAllSections();
      sections.dashboard.classList.remove('d-none');
      renderDashboard();
      window.scrollTo({top:0,behavior:'smooth'});
    }
    function closeDashboard(){ sections.dashboard.classList.add('d-none'); }

    // initial: show chooser on load
    window.addEventListener('load', ()=> {
      setTimeout(()=> chooserModal.show(), 150); // small delay
      refreshCounts();
    });

    /* ============================
       Navigation: chooser -> landing
       ============================ */
    function showCategoryLanding(area){
      chooserModal.hide();
      if(area === 'home'){ hideAllSections(); sections.homeLanding.classList.remove('d-none'); }
      else { hideAllSections(); sections.foodLanding.classList.remove('d-none'); }
    }
    // exposed for top buttons
    window.showCategoryLanding = showCategoryLanding;
    window.showChooser = showChooser;
    $$('openChooser').onclick = showChooser;
    $$('openDashboard').onclick = showDashboard;

    /* ============================
       OPEN HOME CATEGORY -> detail
       ============================ */
    function openHomeCategory(cat){
      hideAllSections();
      sections.homeDetail.classList.remove('d-none');
      $$('homeDetailTitle').innerText = `üè† Home ‚Äî ${cat}`;
      $$('homeCategoryField').value = cat;
      $$('homeListSubtitle').innerText = `${cat}`;
      // set expiry auto when bought date changes
      $$('homeBoughtDate').addEventListener('change', updateHomeExpiry);
      // render list for that category
      renderHomeTable(cat);
      window.scrollTo({top:0,behavior:'smooth'});
    }
    window.openHomeCategory = openHomeCategory;

    function backToHomeLanding(){
      hideAllSections();
      sections.homeLanding.classList.remove('d-none');
      resetHomeForm();
    }

    /* ============================
       OPEN FOOD CATEGORY -> detail
       ============================ */
    function openFoodCategory(cat){
      hideAllSections();
      sections.foodDetail.classList.remove('d-none');
      $$('foodDetailTitle').innerText = `üç¥ Food ‚Äî ${cat}`;
      $$('foodCategoryField').value = cat;
      $$('foodListSubtitle').innerText = `${cat}`;
      $$('foodBoughtDate').addEventListener('change', updateFoodExpiry);
      renderFoodTable(cat);
      window.scrollTo({top:0,behavior:'smooth'});
    }
    window.openFoodCategory = openFoodCategory;

    function backToFoodLanding(){
      hideAllSections();
      sections.foodLanding.classList.remove('d-none');
      resetFoodForm();
    }

    /* ============================
       Auto-expiry logic helpers
       ============================ */
    function updateHomeExpiry(){
      const bought = $$('homeBoughtDate').value;
      const cat = $$('homeCategoryField').value;
      if(!bought || !cat) return;
      const days = homeExpiryRules[cat] || 30;
      const d = new Date(bought); d.setDate(d.getDate() + days);
      $$('homeExpiryDate').value = isoDate(d);
    }

    function updateFoodExpiry(){
      const bought = $$('foodBoughtDate').value;
      const cat = $$('foodCategoryField').value;
      if(!bought || !cat) return;
      const days = foodExpiryRules[cat] || 7;
      const d = new Date(bought); d.setDate(d.getDate() + days);
      $$('foodExpiryDate').value = isoDate(d);
    }

    /* ============================
       Renders & storage for Home
       ============================ */
    function renderHomeTable(categoryFilter){
      const tbody = $$('homeTable');
      tbody.innerHTML = '';
      const today = new Date();
      homeItems.forEach((it, idx) => {
        if(it.category !== $$('homeCategoryField').value) return;
        const badge = expiryBadge(it.expiryDate);
        tbody.innerHTML += `
          <tr>
            <td>${it.category}</td>
            <td>${escapeHtml(it.name)}</td>
            <td>${escapeHtml(it.quantity)}</td>
            <td>‚Çπ${Number(it.money||0).toFixed(2)}</td>
            <td>${formatDate(it.boughtDate)}</td>
            <td>${formatDate(it.expiryDate)}<br>${badge}</td>
            <td><button class="btn btn-sm btn-danger" onclick="deleteHomeItem(${idx})"><i class="bi bi-trash"></i></button></td>
          </tr>`;
      });
    }

    // add home item
    $$('homeForm').addEventListener('submit', e=>{
      e.preventDefault();
      const category = $$('homeCategoryField').value;
      const name = $$('homeProductName').value.trim();
      const quantity = $$('homeQuantity').value.trim();
      const money = $$('homeMoney').value;
      const boughtDate = $$('homeBoughtDate').value;
      const expiryDate = $$('homeExpiryDate').value;
      if(!category || !name || !boughtDate || !expiryDate){ alert('Please fill required fields'); return; }
      homeItems.push({ category, name, quantity, money, boughtDate, expiryDate });
      localStorage.setItem(HOME_KEY, JSON.stringify(homeItems));
      renderHomeTable(category);
      resetHomeForm();
      refreshCounts();
    });

    function deleteHomeItem(index){
      // index is global; need to find actual item by index order shown ‚Äî simpler: remove by matching index in array where category matches and order encountered
      const cat = $$('homeCategoryField').value;
      let count = -1; let removeIdx = -1;
      for(let i=0;i<homeItems.length;i++){
        if(homeItems[i].category !== cat) continue;
        count++;
        if(count === index){ removeIdx = i; break; }
      }
      if(removeIdx === -1) {
        // fallback: remove by given index if valid
        if(index>=0 && index<homeItems.length) removeIdx = index;
        else return;
      }
      if(confirm('Delete this item?')) {
        homeItems.splice(removeIdx,1);
        localStorage.setItem(HOME_KEY, JSON.stringify(homeItems));
        renderHomeTable(cat);
        refreshCounts();
      }
    }

    function resetHomeForm(){
      $$('homeProductName').value=''; $$('homeQuantity').value=''; $$('homeMoney').value=''; $$('homeBoughtDate').value=''; $$('homeExpiryDate').value='';
    }

    /* ============================
       Renders & storage for Food
       ============================ */
    function renderFoodTable(category){
      const tbody = $$('foodItemsTable');
      tbody.innerHTML = '';
      foodItems.forEach((it, idx) => {
        if(it.category !== category) return;
        const badge = expiryBadge(it.expiryDate);
        tbody.innerHTML += `
          <tr>
            <td>${it.category}</td>
            <td>${escapeHtml(it.name)}</td>
            <td>${escapeHtml(it.quantity)}</td>
            <td>‚Çπ${Number(it.money||0).toFixed(2)}</td>
            <td>${formatDate(it.boughtDate)}</td>
            <td>${formatDate(it.expiryDate)}<br>${badge}</td>
            <td><button class="btn btn-sm btn-danger" onclick="deleteFoodItem(${idx})"><i class="bi bi-trash"></i></button></td>
          </tr>`;
      });
    }

    $$('foodItemForm').addEventListener('submit', e=>{
      e.preventDefault();
      const category = $$('foodCategoryField').value;
      const name = $$('foodProductName').value.trim();
      const quantity = $$('foodQuantity').value.trim();
      const money = $$('foodMoney').value;
      const boughtDate = $$('foodBoughtDate').value;
      const expiryDate = $$('foodExpiryDate').value;
      if(!category || !name || !boughtDate || !expiryDate){ alert('Please fill required fields'); return; }
      foodItems.push({ category, name, quantity, money, boughtDate, expiryDate });
      localStorage.setItem(FOOD_KEY, JSON.stringify(foodItems));
      renderFoodTable(category);
      resetFoodForm();
      refreshCounts();
    });

    function deleteFoodItem(index){
      if(confirm('Delete this food item?')){
        foodItems.splice(index,1);
        localStorage.setItem(FOOD_KEY, JSON.stringify(foodItems));
        renderFoodTable($$('foodCategoryField').value);
        refreshCounts();
      }
    }

    function resetFoodForm(){
      $$('foodProductName').value=''; $$('foodQuantity').value=''; $$('foodMoney').value=''; $$('foodBoughtDate').value=''; $$('foodExpiryDate').value='';
    }

    /* ============================
       Dashboard computations
       ============================ */
    function refreshCounts(){
      $$('totalHome').innerText = homeItems.length;
      $$('totalFood').innerText = foodItems.length;

      // expiring soon (next 7 days) across both
      const now = new Date();
      let soon = [];
      [...homeItems, ...foodItems].forEach(it=>{
        const exp = new Date(it.expiryDate);
        const daysLeft = Math.ceil((exp - now)/(1000*60*60*24));
        if(daysLeft <= 7) soon.push({name:it.name, category:it.category, days:daysLeft});
      });
      $$('expiringSoon').innerText = soon.length;
      const list = $$('expiringList'); list.innerHTML='';
      if(soon.length===0) list.innerHTML = '<div class="text-muted">No items expiring in next 7 days.</div>';
      else {
        soon.sort((a,b)=>a.days-b.days);
        soon.forEach(s=>{
          list.innerHTML += `<div class="d-flex justify-content-between align-items-center p-2 border-bottom"><div><strong>${escapeHtml(s.name)}</strong><div class="small text-muted">${s.category}</div></div><div><span class="badge-expiry ${s.days<0?'expired':(s.days<=3?'near':(s.days<=7?'soon':'ok'))}">${s.days<0?('Expired '+Math.abs(s.days)+'d'):s.days+'d'}</span></div></div>`;
        });
      }
    }

    function renderDashboard(){
      refreshCounts();
    }

    /* ============================
       Wire up chooser buttons inside modal
       ============================ */
    $$('continueBtn')?.addEventListener('click', ()=>{
      const radios = document.querySelectorAll('input[name="mainCategory"]');
      let sel = null;
      radios.forEach(r=>{ if(r.checked) sel = r.value; });
      if(sel==='home') showCategoryLanding('home');
      else showCategoryLanding('food');
      chooserModal.hide();
    });

    // showChooser exposed earlier
    function showCategoryLanding(area){
      hideAllSections();
      if(area==='home') sections.homeLanding.classList.remove('d-none');
      else sections.foodLanding.classList.remove('d-none');
    }

    // ensure functions are globally available where needed
    window.openHomeCategory = openHomeCategory;
    window.openFoodCategory = openFoodCategory;
    window.backToHomeLanding = backToHomeLanding;
    window.backToFoodLanding = backToFoodLanding;
    window.deleteHomeItem = deleteHomeItem;
    window.deleteFoodItem = deleteFoodItem;
    window.goBackToModal = showChooser;

    /* ============================
       Small helper to escape HTML
       ============================ */
    function escapeHtml(str){
      if(!str) return '';
      return String(str)
        .replaceAll('&','&amp;')
        .replaceAll('<','&lt;')
        .replaceAll('>','&gt;')
        .replaceAll('"','&quot;')
        .replaceAll("'", '&#39;');
    }

    /* ============================
       Make sure counts refresh on load
       ============================ */
    refreshCounts();

    /* optional: keyboard ESC closes dashboard */
    document.addEventListener('keydown', (e)=>{
      if(e.key==='Escape') {
        closeDashboard();
      }
    });
  </script>
</body>
</html>
